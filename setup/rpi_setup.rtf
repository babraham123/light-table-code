{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 Helvetica-Light;
}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red105\green0\blue21;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs24 \cf0 Raspberry Pi Setup
\b0 \
\
(plug in SD card)\
open disk utility and erase card. Set the name and the format to \'93MS-DOS (FAT)\'94\
\
(find a RPi OS image to use. I used 
\f1\fs22 \CocoaLigature0 2014-06-20-wheezy-raspbian.img
\f0\fs24 \CocoaLigature1 )\
(in terminal, type cmds)\
diskutil list\
(find the SD card folder, ex 
\f1\fs22 \CocoaLigature0 /dev/disk38
\f0\fs24 \CocoaLigature1 )\
diskutil unmountdisk 
\f1\fs22 \CocoaLigature0 /dev/disk38\
\
(download your pi OS image and cd to folder)\
\pard\pardeftab720
\cf0 sudo dd if=image-file.img of=/dev/disk38 bs=2m\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 (flash OS image onto card, if=source, of=target, bs=size)\
\
(plug in peripherals, like keyboard, network cable, and power)\
\
ifconfig (get ip address)\
nmap -sn 192.168.1.0/24\
ssh pi@192.168.1.88\
username= pi\
password= raspberry\
(install mmap, locate pi on network, and ssh into it)\
\
sudo raspi-config\
(set password, OS size, locale, )\
username= pi\
password= typical\
\
startx (for GUI)\
\
sudo apt-get update\
sudo apt-get upgrade\
sudo apt-get autoremove\
\
(wifi dongle setup)\
sudo cp /etc/wpa_supplicant/wpa_supplicant.conf /etc/wpa_supplicant/wpa_supplicant.conf.bak\
\pard\pardeftab720\sl360
\cf0 sudo nano /etc/wpa_supplicant/wpa_supplicant.conf\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 (change your ssid/passwrd)\
------------\
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\
update_config=1\
\
network=\{\
        ssid="your_ssid"\
        psk="your_pass"\
\}\
------------\
\
sudo reboot\
nmap -sn 192.168.1.0/24\
(find ip address again)\
ssh pi@192.168.1.56\
\
\
(shutdown command)\
\pard\pardeftab720\sl380
\cf0 sudo shutdown -h now\
\
-----------------\
install VNC for remote desktop\
\
sudo apt-get install tightvncserver\
\
tightvncserver :1\
(enter a password (typical), and one for view-only mode (qazwsx))\
nano /etc/rc.local (to run at boot)\
\
Connect on a Mac\
Finder >> Go >> Connect to a Server\
vnc://192.168.1.56:5901\
enter password\
\
tightvncserver -kill :1\
(kill server)\
\
-----------------\
Install node.js (server side)\
\
sudo apt-get install nodejs\
sudo apt-get install npm\
\
or (install from source)\
curl http://nodejs.org/dist/v0.10.29/node-v0.10.29.tar.gz > node-v0.10.29.tar.gz\
tar -xvf node-v0.10.29.tar.gz\
cd node-v0.10.29\
./configure\
make\
sudo make install\
\
(if gcc is not installed)\
\pard\pardeftab720\sl360
\cf0 sudo apt-get install gcc \
sudo apt-get install g++ \
sudo apt-get install autoconf \
sudo apt-get install automake\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\
or (install node.js on debian systems)\
wget http://node-arm.herokuapp.com/node_latest_armhf.deb\
sudo dpkg -i node_latest_armhf.deb\
\
\'97---------------\
Install and start mongodb\
\
uname -a\
(make sure you\'92re running 64 bit)\
\
vi /etc/yum.repos.d/mongodb.repo\
>>\
[mongodb]\
name=MongoDB Repository\
baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/\
gpgcheck=0\
enabled=1\
<<\
\
sudo yum install mongodb-org\
\
sudo mkdir -p /data/db\
\
sudo service mongod start\
(default port 27017)\
(sudo mongod, on mac)\
\
\
---------------\
\
nginx node config (different port than django??)\
\
server \{\
    listen 8080;\
\
    root /vagrant/pc/static;\
    index index.html index.htm;\
\
    access_log /var/log/nginx/access.log;\
    error_log  /var/log/nginx/error.log;\
\
    server_name website.com;\
\
    client_max_body_size 20M;\
    location /static \{\
        alias /vagrant/pc/static;\
    \}\
\
    location /socket.io/websocket \{\
        proxy_pass http://devserver_pc;\
        proxy_http_version 1.1;\
        proxy_set_header Upgrade $http_upgrade;\
        proxy_set_header Connection "upgrade";\
    \}\
\}\
\pard\pardeftab720\sl380
\cf0 ----------------- \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
(configure and start project)\
\
(confirm package.json)\
\
npm install\
\
node socket_server.js\
\
\'97---------------\
\
(Install python libraries for digital io pins) (client side on RPi)\
\
sudo apt-get install python2.7-dev\
sudo apt-get install python-pip\
sudo pip install -U RPi.GPIO\
sudo pip install -U pyserial\
\
----------------\
(optional: analog inputs)\
\
\
sudo nano /etc/modprobe.d/raspi-blacklist.conf\
	(comment out this line and save)\
	# spi-bcm2708\
sudo reboot\
lsmod\
(enable SPI driver)\
\
mkdir py-spidev\
cd py-spidev\
wget https://raw.github.com/doceme/py-spidev/master/setup.py\
wget https://raw.github.com/doceme/py-spidev/master/spidev_module.c\
sudo python setup.py install\
(install py hooks for SPI)\
\
\
----------------\
(optional: set locale)\
export LANGUAGE=en_US.UTF-8\
export LANG=en_US.UTF-8\
export LC_ALL=en_US.UTF-8\
sudo locale-gen en_US.UTF-8\
sudo dpkg-reconfigure locales\
\
----------------\
(optional: connect via direct ethernet)\
\pard\pardeftab720\sl400\sa400

\f2\fs24 \cf2 \kerning1\expnd4\expndtw20
\CocoaLigature1 \'96 System Preferences -> Sharing -> Internet Sharing to Ethernet\uc0\u8232 \'96 Connect Raspberry Pi to Mac\'92s Ethernet port\u8232 \'96 SSH {\field{\*\fldinst{HYPERLINK "mailto:pi@192.168"}}{\fldrslt \cf3 \kerning1\expnd4\expndtw20
pi@192.168}}.2.2 (usually, else use \'91arp -a\'92 to get a list of IPs)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 -------------------\
(optional: clone SD card for backup)\
diskutil list\
\pard\pardeftab720
\cf0 sudo dd if=/dev/disk1 of=/Users/babraham/Desktop/clone1.dmg\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\
Notes::\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://stackoverflow.com/questions/10703513/node-js-client-for-a-socket-io-server"}}{\fldrslt \cf0 http://stackoverflow.com/questions/10703513/node-js-client-for-a-socket-io-server}}\
(standalone client)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://www.joezimjs.com/javascript/plugging-into-socket-io-the-basics/"}}{\fldrslt \cf0 http://www.joezimjs.com/javascript/plugging-into-socket-io-the-basics/}}\
(standalone server)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://www.raspberrypi-spy.co.uk/2013/10/analogue-sensors-on-the-raspberry-pi-using-an-mcp3008/"}}{\fldrslt \cf0 http://www.raspberrypi-spy.co.uk/2013/10/analogue-sensors-on-the-raspberry-pi-using-an-mcp3008/}}\
(analog input tutorial)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://blog.oscarliang.net/connect-raspberry-pi-and-arduino-usb-cable/"}}{\fldrslt \cf0 http://blog.oscarliang.net/connect-raspberry-pi-and-arduino-usb-cable/}}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
{\field{\*\fldinst{HYPERLINK "https://github.com/voodootikigod/node-serialport"}}{\fldrslt \cf0 https://github.com/voodootikigod/node-serialport}}\
(connect to arduino over serial)\
\
\
The RPi side should probably be entirely in python (GPIO and WS client, due to easy of use, and access to lower level funcs. The GPIO library also has callbacks for events).\
The WS server should be in node, due to issues with python and async events (I don\'92t want to learn gevent).\
I may need more digital pins and an A-D converter (MCP3008) for analog inputs.\
\
(get emails in python, with feedparser)\
\pard\pardeftab720\sl400
\cf0 feedparser.parse("https://" + USERNAME + ":" + PASSWORD +"@mail.google.com/gmail/feed/atom")\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
Motion Detection\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://packages.ubuntu.com/lucid/motion"}}{\fldrslt \cf0 http://packages.ubuntu.com/lucid/motion}}\
}